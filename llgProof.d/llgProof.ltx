\documentclass[draft,12pt]{amsart}
\usepackage{float}
\usepackage{algorithm}
\usepackage{algpseudocode}

\usepackage[final]{listings}
\usepackage{float}
\floatstyle{boxed}
\restylefloat{figure}
\usepackage{arydshln}
\usepackage{multirow}
\usepackage{needspace}

\usepackage{thmtools}

\newcommand{\Pipe}{\charâ€˜\|}
\newcommand{\See}[2]{\emph{see} #1}
\usepackage{amssymb}
\usepackage{wasysym} % Used for \Circle
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage{xspace}
\usepackage{graphicx}
\usepackage{ragged2e}
\usepackage{url}
\usepackage[final]{hyperref}
\usepackage{placeins}
\usepackage{mfirstuc}
\usepackage{ifdraft}
\usepackage[obeyDraft]{todonotes}
\usepackage{datetime2}
\ifdraft{
        \usepackage[
    colorspec=0,
    text=DRAFT\ \DTMnow{}\ DRAFT,
    angle=0,
    scale=1.5,
    fontsize=12pt,
    vpos=.5in
        ]{draftwatermark}
}{}

% Fix conflict between todonotes and amsart packages
% See http://ctan.math.washington.edu/tex-archive/macros/latex/contrib/todonotes/todonotes.pdf,
% p. 10.
\makeatletter
\providecommand\@dotsep{5}
\def\listtodoname{List of TODOs}
\def\listoftodos{\@starttoc{tdo}\listtodoname}
\makeatother

\makeatletter
\renewcommand{\listofalgorithms}{\@starttoc{loa}{List of algorithms}}
\let\l@algorithm=\l@figure
\makeatother

% Re hbox's, see
% https://tex.stackexchange.com/questions/241343/what-is-the-meaning-of-fussy-sloppy-emergencystretch-tolerance-hbadness
\raggedbottom

% Replaced by todonotes package
% \newcommand{\todo}[1]{\par{\large\bf Todo: #1}\par}

\newcommand{\mymathop}[1]{\mathop{\texttt{#1}}}
\newcommand{\mymathbin}[1]{\mathbin{\texttt{#1}}}

% For a type name, when it occurs in text
\newcommand{\type}[1]{\ensuremath{\texttt{#1}}}

\newcommand{\True}{\mbox{\sf T}\xspace}
\newcommand{\False}{\mbox{\sf F}\xspace}
\newcommand{\Trueword}{\sf true}
\newcommand{\Falseword}{\sf false}
\newcommand{\Neg}{\neg}
\newcommand{\Implies}{\supset}
\newcommand{\ImpliesAlt}{\Rightarrow}
\newcommand{\NEquiv}{\not\equiv}
\newcommand{\NEquivRel}{\mathrel{\not\equiv}}

\newcommand{\qeq}{\simeq}
\newcommand{\nqeq}{\not\simeq}
\newcommand{\unicorn}{\ensuremath{\bot}\xspace}
\newcommand{\TRUE}{\ensuremath{\mathbb T}\xspace}
\newcommand{\FALSE}{\ensuremath{\mathbb F}\xspace}

\newcommand{\mult}{\mathbin{\ast}}
\newcommand{\dfn}[1]{{\bf #1}}
\newcommand{\sep}{\,\mid\,}
\newcommand{\mydot}{\raisebox{.05em}{$\,\bullet\,$}}
\newcommand{\wmydot}{\raisebox{.05em}{$\,\,\bullet\,\,$}}
\newcommand{\cat}{\,.\,}
\newcommand{\wcat}{\,\,.\,\,}
\newcommand{\size}[1]{\ensuremath{\left | {#1} \right |}}
\newcommand{\Vsize}[1]{\ensuremath{\size{\var{#1}}}}
\newcommand{\bigsize}[1]{\ensuremath{\bigl| {#1} \bigr|}}
\newcommand{\order}[1]{\ensuremath{{\mathcal O}(#1)}\xspace}
\newcommand{\Oc}{\order{1}}
\newcommand{\On}{\order{\var{n}}}
\newcommand{\inference}[2]{\genfrac{}{}{1pt}{}{#1}{#2}}

\newcommand{\lastix}[1]{\ensuremath{\##1}}
\newcommand{\Vlastix}[1]{\ensuremath{\lastix{\V{#1}}}}
\newcommand{\VlastElement}[1]{\Velement{#1}{\Vlastix{#1}}}
\newcommand{\element}[2]{\ensuremath{\mathop{#1}
    \mathopen{}\left[#2\right]\mathclose{}}}
\newcommand{\Velement}[2]{\ensuremath{\mathop{\V{#1}}
    \mathopen{}\left[#2\right]\mathclose{}}}
\newcommand{\VVelement}[2]{\ensuremath{\mathop{\V{#1}}
    \mathopen{}\left[ \V{#2}
    \right]\mathclose{} }}

% \newcommand{\tuple}[1]{\ensuremath{\left\langle #1 \right\rangle}}
\newcommand{\tuple}[1]{\ensuremath{\mathopen{}\left[#1\right]\mathclose{}}}

\newcommand{\mcolon}{\mathrel:}
\newcommand{\mcoloncolon}{\mathrel{\vcenter{\hbox{$::$}}}}

% \newcommand{\suchthat}{\mcoloncolon}
% In this paper, use \mid
\newcommand{\suchthat}{\mid}
\newcommand{\quantify}[3]{% quantifier, binding, predicate
    \ensuremath{\mathrel{#1}#2 \; \suchthat \; #3}%
}

\newcommand{\existUniqQOp}{\mathop{\exists{!}}}
\newcommand{\existUniqQ}[2]{\quantify{\existUniqQOp}{#1}{#2}}
% extra {} in existQOP and univQOp to raise to baseline
\newcommand{\existQOp}{\mathop{\exists{}}}
\newcommand{\existQ}[2]{\quantify{\existQOp}{#1}{#2}}
% extra {} in existQOP and univQOp to raise to baseline
\newcommand{\univQOp}{\mathop{\forall{}\,}}
\newcommand{\univQ}[2]{\quantify{\univQOp}{#1}{#2}}

% I use hyphens in variable names,
% so I need to ensure that subtraction is
% clearly distinguished by the typography
\newcommand{\subtract}{\,-\,}

\newcommand{\var}[1]{\ensuremath{\texttt{#1}}}
\newcommand{\V}[1]{\ensuremath{\texttt{\mbox{#1}}}}

\newcommand{\cfg}{CFG}

\newcommand{\de}{\mathrel{::=}}
\newcommand{\derives}{\Rightarrow}
\newcommand{\derivesW}[1]
    {\mathrel{\mbox{$\:\underset{#1}{\Rightarrow}$}}}
\newcommand{\derivesV}[1]{\derivesW{\V{#1}}}
\newcommand{\destar}
    {\mathrel{\mbox{$\:\stackrel{\!{\ast}}{\Rightarrow\!}\:$}}}
\newcommand{\destarW}[1]
    {\mathrel{\mbox{$\:\underset{#1}{\overset{\ast\:}{\Rightarrow}}$}}}
\newcommand{\destarV}[1]{\destarW{\V{#1}}}
\newcommand{\deplus}
    {\mathrel{\mbox{$\:\stackrel{\!{+}}{\Rightarrow\!}\:$}}}
\newcommand{\deplusW}[1]
    {\mathrel{\mbox{$\:\underset{#1}{\overset{{+}\:}{\Rightarrow}}$}}}
\newcommand{\deplusV}[1]{\deplusW{\V{#1}}}
\newcommand{\derivg}[1]{\mathrel{\mbox{$\:\Rightarrow\:$}}}
\newcommand{\derivrg}[2]{\mathrel{\mbox{$\:\stackrel{\!{#1}}%
        {\Rightarrow\!}\:$}}}

% For the type subscript for powersets
\newcommand{\setOf}[1]{{{#1}^{\mbox{\normalsize $\ast$}}}}

\newcommand{\set}[1]{{\left\lbrace #1 \right\rbrace} }
\newcommand{\bigset}[1]{{\bigl\lbrace #1 \bigr\rbrace} }
\newcommand{\Bigset}[1]{{\Bigl\lbrace #1 \Bigr\rbrace} }

\DeclareMathOperator{\wrt}{wrt}

% use internal counter of algorithmicx
\newcommand{\algnested}{ %
  \makeatletter\ALG@nested\makeatother %
}

\newcommand{\algstrut}{\rule{0pt}{.85\baselineskip}}



% I use parboxes in equations.  This sets a useful width for them.
\newlength{\mathparwidth}
\newlength{\longtagwidth}
\settowidth{\longtagwidth}{(99999)\quad}
\setlength{\mathparwidth}{\dimexpr\textwidth-\longtagwidth}
\newcommand{\myparbox}[2][\mathparwidth]{%
  \parbox[t]{#1}{%
  % \linespread{1.15}\selectfont
  \ignorespaces#2\par%
  }%
}

\newcommand{\parcomment}[2]{\hspace{\dimexpr \algorithmicindent * #1}$\triangleright$ #2}

% \newcommand{\rawparcomment}[2][\algparwidth]{%
  % \myparbox[#1]{#2}%
% }
% \newcommand{\parcomment}[2][\algparwidth]{%
  % \myparbox[#1]{$\triangleright$ #2}%
% }
% \newcommand{\parcomment}[1]{\hspace{\dimexpr \algorithmicindent - \labelwidth }$\triangleright$
  % \protect\parbox[t]{\dimexpr \textwidth - (\algorithmicindent - \labelwidth)}{#1}%
% }

% I want to use 'call' outside of pseudocode
\newcommand\call[2]{\textproc{#1}\ifthenelse{\equal{#2}{}}{}{(#2)}}%

\newcommand{\mname}[1]{\mbox{\sf #1}}
% [O]perator [A]pplication
\newcommand{\Oname}[1]{\mname{#1}}
% The \mathopen{} and \mathclose{} eliminate unwanted extra space
\newcommand{\OA}[2]{\ensuremath{%
    \mathop{\Oname{#1}}\mathopen{}\left(#2\right)\mathclose{}%
}}
\newcommand{\VOA}[2]{\OA{#1}{\V{#2}}}
% [F]unction [A]pplication, replaces \myfn
\newcommand{\smallrawfn}[2]{\ensuremath{\mathop{#1}(#2)}}
% The \mathopen{} and \mathclose{} eliminate unwanted extra space
\newcommand{\rawfn}[2]{\ensuremath{\mathop{#1}\mathopen{}\left(#2\right)\mathclose{}}}
\newcommand{\Fname}[1]{\V{#1}}
\newcommand{\FA}[2]{\ensuremath{\rawfn{\mathop{\Fname{#1}}}{#2}}}
\newcommand{\VFA}[2]{\FA{#1}{\V{#2}}}

\newcommand{\cuz}{\ensuremath{\mathrel{\because}}\xspace}
\newcommand{\bcuz}{\linebreak[1]\cuz}

% * Reference meta tags ("classifying prefixes") use in this document:
% * From fancyref:
% Chapter chap:
% Section sec:
% Equation eq:
% Figure fig:
% Table tab:
% Enumeration enum:
% Footnote fn:
%
% * Not in fancyref
% Definition df:
% Epigraph epi:
% Theorem th:
% Lemma lm:
% Remark rm:
% Observation obs:
% Example ex:
% Page page:

% The "page:" metatag is for labels intended as the target of
% page references.

% The auto-placement of qed's fails a lot.
% Semi-manual replacement using \qedhere often fails as well.
% I went with % 100% manual placement,
% which in fact is not any more trouble,
% and which is the only way to guarantee the QED's wind up where I
% want them.

% Try to gather all the stuff to do with theoremoids here
% Start off with theorems, then the other theoremoids,
% mostly alphabetically.

\renewcommand{\qedsymbol}{}
\newcommand{\myqed}{%
  \ifmmode\square
  \else$\square$
  \fi%
}

\newcommand{\colonpageref}[1]{%
 \ifthenelse{\equal{\pageref{#1}}{\thepage}}%
  {}{{:}\pageref*{#1}}%
}

% genref -- generic reference
\newcommand{\genref}[3][]{%
    \ifthenelse{\equal{#1}{}}{}{%
      \ifmmode \text{``#1''}%
      \else``#1'' %
      \fi%
    }%
    (\ensuremath{% To cover both cases, force math mode
        \hyperref[#2]{%
            \textrm{#3}\ref*{#2}\colonpageref{#2}%
        }%
    })%
}

\theoremstyle{definition}

% theoremoids: Th

\newtheorem{theorem}{Theorem}
\newcommand{\Thref}[2][]{%
    \genref[#1]{th:#2}{Th}%
}
% some day delete \longThref
\newcommand{\longThref}[2]{%
  \ifmmode \text{``#1''\Thref{#2}}%
  \else``#1'' \Thref{#2}%
  \fi%
}
% "full" ref -- always includes page
\newcommand{\ThFref}[1]{(\textrm{Th}\ref{#1}:\pageref{#1})}
\newcommand{\thEnd}{\Circle}

% theoremoids: Df

\newtheorem{definition}[theorem]{Definition}
\newcommand{\Dfref}[2][]{%
    \genref[#1]{df:#2}{Df}%
}
\newcommand{\dfEnd}{\Circle}

% theoremoids: Eq

\newcommand{\Algref}[1]{\genref{alg:#1}{Alg}}
\newcommand{\Eqref}[1]{\genref{eq:#1}{Eq}}

% theoremoids: Ex

\newtheorem{example}[theorem]{Example}
\newcommand{\Exref}[1]{\genref{ex:#1}{Ex}}
\newcommand{\exEnd}{\Circle}

% theoremoids: Ob

\newtheorem{observation}[theorem]{Observation}
\newcommand{\Obref}[1]{\genref{obs:#1}{Ob}}
\newcommand{\obEnd}{\Circle}

% theoremoids: Rm

\newtheorem{remark}[theorem]{Remark}
\newcommand{\Rmref}[2][]{\genref[#1]{rm:#2}{Rm}}
\newcommand{\rmEnd}{\Circle}

% local theoremoids: Lm

\newtheorem{lemma}[theorem]{Lemma}
\newcommand{\Lmref}[2][]{\genref[#1]{lm:#2}{Lm}}
% some day delete \longLmref
\newcommand{\longLmref}[2]{%
  \ifmmode \text{``#1''\Lmref{#2}}%
  \else``#1'' \Lmref{#2}%
  \fi%
}
\newcommand{\lmEnd}{\thEnd}

\newcommand{\naturals}{\ensuremath{\mathbb{N}}\xspace}
\newcommand{\countables}{\ensuremath{\mathbb{CNT}}\xspace}
\newcommand{\integers}{\ensuremath{\mathbb{Z}}\xspace}

\hyphenation{oper-and oper-ands}
\hyphenation{look-ahead}
\hyphenation{memo-ization}

% I like to silence underfull hbox messages.
% This is syntactic sugar for doing that.
\newenvironment{MYsloppy}[1][3em]{\par\tolerance9999 \emergencystretch#1\relax}{\par}
% This form allows the resetting of hbadness, which may be necessary to
% shut up an "underfull" warning.
\newenvironment{MYsloppyB}[2]{\par\tolerance9999 \emergencystretch#1 \hbadness#2\relax}{\par}
% This form is for a trick:  Tolerances are evaluated line by line, so a tolerance
% less than 9999 may produce a better looking paragraph and reduce the "badness".
\newenvironment{MYsloppyC}[3]{\par\tolerance#3 \emergencystretch#1 \hbadness#2\relax}{\par}

\title
  [llguidance proof]
  {Completeness proof for llguidance Earley variant}

\author{Jeffrey Kegler}
\ifdraft{ \thanks{DRAFT as of \DTMnow} }{}
\date{\DTMnow.}

\newcommand{\llguidance}{{\tt llguidance}\xspace}
\newcommand{\llE}{{\llguidance Earley}\xspace}
\newcommand{\pref}[1]{\ref{#1} on page~\pageref{#1}\xspace}

\begin{document}

\maketitle
\tableofcontents

\section{About this document}
\label{sec:about-me}

This document contains a proof of completeness for the variant of
Earley's algorithm in \llguidance.
It assumes some familiarity with the code in
\llguidance\cite{llguidance},
and with the traditional proof of correctness
for Earley's algorithm.\footnote{%
    As found, for example,
    in~\cite[pp. 323-325]{AH1972v1}.
    }

\section{Conventions}
\noindent $\bullet$
``AF'' and its capitalization variants abbreviates
``assumption for''.
For example ``AF theorem'' abbreviates
``assumption for the theorem''.
\par
\noindent $\bullet$
``Iff'' and its capitalization variants abbreviates
``if and only if''.
\par
\noindent $\bullet$
``Wlog'' and its capitialization variants abbreviates
``without log of generality''.
\par
\noindent $\bullet$
``Wrt'' and its capitalization variants abbreviates
    ``with respect to''.
    \par
\noindent $\bullet$
Ranges are inclusive start,
    exclusive end, so that, for example,
        \begin{gather*}
            \element{(\texttt{"abcd"})}{0,2} = \texttt{"ab"} \text{, and} \\
            \element{(\texttt{"abcd"})}{2,3} = \texttt{"c"}.
        \end{gather*}
\par
\noindent $\bullet$ \TRUE is a boolean (or optional boolean) true; and
        \FALSE is a boolean (or optional boolean) false.

\section{Definitions}

\begin{definition}[The input \V{w}]
        In  this paper, \V{w} is a string of symbols.
        The ``symbols'' are, for our purposes, an unordered
        set of opaque objects.
        We call the string \V{w}, the \textbf{input}.
        \dfEnd
\end{definition}

\begin{definition}[Grammar]
\label{df:grammar}
A grammar is a 4-tuple
\[
        \tuple{\V{N},\V{T},\V{P},\V{S}},
\]
where \V{N} (the non-terminals)
and \V{T} (the terminals) are disjoint sets of symbols.
$\V{S} \in \V{N}$ is
the start symbol.
\V{P} is the set of rules, or productions.
The rules are of the form
$\V{A} \de \V{rhs}$,
where $\V{A} \in \V{N}$
and
$\V{rhs} \in (\V{N}\cup\V{T})^\ast$.
\dfEnd
\end{definition}

\begin{definition}[The grammar \V{g}]
\label{df:g}
When we say that \V{g} is \textbf{proper} we mean that it has
no unreachable symbols, no unproductive symbol,
and no cycles.
Every grammar in this document is the proper grammar
\[
        \V{g} = \tuple{\V{N},\V{T},\V{P},\V{S}}. \qquad \dfEnd
\]
\end{definition}

\begin{definition}[Earley item]
We will write an Earley item as
\[
        \tuple{\V{A} \de \alpha \mydot \beta, \V{origin}, \V{current}}
\]
where $\alpha$ and $\beta$ are sentential forms,
\[
        \alpha \in (\V{N} \cup \V{T}^\ast) \land \beta \in (\V{N} \cup \V{T})^\ast,
\]
and $\V{A} \de \alpha \cat \beta$ is a rule in the grammar \V{g},
\[
        (\V{A} \de \alpha \cat \beta) \in \V{P}.
\]
A large raised dot ($\mydot$) indicates the dot location in the rule.
\V{origin} is the origin location of the item in the input, and
\V{current} is the location of the dot in the input,
or dot location.
\dfEnd
\end{definition}

\begin{definition}[Predot symbol]
In an Earley item
\[
        \tuple{\V{A} \de \alpha \mydot \beta, \V{origin}, \V{current}},
\]
we call the last symbol in $\alpha$, \element{\alpha}{\lastix{\alpha}},
the predot symbol.
When $\size{\alpha} = 0$, there is no predot symbol. \dfEnd
\end{definition}

\begin{definition}[Types of Earley items]
We say that
\begin{itemize}
\item an Earley item is a \textbf{start item}
        if its LHS is the start symbol and
        it has no predot symbol;
\item an Earley item is \textbf{predicted}, or a \textbf{prediction}
        if its LHS is not the start symbol and
        it has no predot symbol;
\item an Earley item is \textbf{confirmed}, or a \textbf{confirmation},
        if it has a predot symbol;
\item an Earley item is \textbf{scanned}, or a \textbf{scansion},
        if its predot symbol is a terminal,
         $\element{\alpha}{\lastix{\alpha}} \in \V{T}$;
\item an Earley item is \textbf{reduced}, or a \textbf{reduction},
        if its predot symbol is a non-terminal;
        $\element{\alpha}{\lastix{\alpha}} \in \V{N}$; \qquad \dfEnd
\end{itemize}
\end{definition}

\begin{definition}[Strings]
\label{df:string}
        A \textbf{string} is a sequence whose members are
        elements of the set $(\V{N}\cup\V{T})$.
        In this document, we will use the symbol \V{STR} for set of finite
        strings,
        and $\V{STR}^+$ for set of non-empty finite strings:
        \[ \V{STR}^+ = \V{STR} \subtract \epsilon. \]
        A \textbf{terminal string} is a sequence whose members are
        elements of the set \V{T}.
        In this document, we will use the symbol \V{TSTR} for set of finite
        terminal strings,
        and $\V{TSTR}^+$ for set of non-empty finite terminal strings:
        \[ \V{TSTR}^+ = \V{TSTR} \subtract \epsilon.  \dfEnd \]
\end{definition}

\begin{definition}[SF transition]
        \label{df:transition}
        An \textbf{SF transition}
        is a duple of two sentential forms,
        such that a non-terminal member in the first element of the pair
        is expanded, according to a rule of \V{g}, in the second element of the pair.
        More precisely, let $\V{tr} = (\V{Lstr}, \V{Rstr})$ be an SF transition.
        Then, without loss of generality,
        \begin{equation}
                \V{Lstr} = \alpha \cat \V{A} \cat \beta \\
                \land \; \V{Rstr} = \alpha \cat \V{rhsA} \cat \beta \\
                \land \; \V{A} \de \V{rhsA} \in \V{P}
        \end{equation}
        where $\alpha$ and $\beta$ are strings.
        Overloading terminology a bit,
        \V{Lstr} is called the \textbf{LHS} string of \V{tr},
        and \V{Rstr} is called the \textbf{RHS} string of \V{tr}.
        \dfEnd
\end{definition}

\begin{definition}[Trivial derivation]
        In \Dfref{transition} the symbols in
        $\alpha$ and $\beta$ are simply copied --- they can
        be said to be derived from themselves.
        We say that the
        $\alpha$ and $\beta$ in \V{Rstr}
        are \textbf{trivially derived} from
        $\alpha$ and $\beta$ in \V{Lstr}.
        We also that that
        the substrings of $\alpha$ and $\beta$ in \V{Lstr}
        are \textbf{trivially derived} from
        the corresponding substrings of $\alpha$ and $\beta$ in \V{Lstr};
        and that
        the symbol instances of $\alpha$ and $\beta$ in \V{Lstr}
        are \textbf{trivially derived} from
        the corresponding symbol instances in $\alpha$ and $\beta$ in \V{Lstr};
\dfEnd
\end{definition}

\begin{definition}[Derivation]
        A derivation, call it \V{drv}, is a sequence of strings
        such that every consecutive pair of the sequence is a string transition.
        The individual members of a derivation are strings,
        and in the context of the derivation are called \V{steps}.
        \dfEnd
\end{definition}

\begin{definition}[Symbol instance]
        A symbol may occur many times in a derivation.
        Each occurrence can be identified by the index of the step (\V{stepIX}),
        within the derivation (\V{drv}),
        and the index (\V{pos}) of the symbol occurrence within the string,
        so that the triple $(\V{stepIX}, \V{pos}, \V{drv})$ represents
        a symbol instance.
        More practically, we will tag symbols with an instance identifier,
        separated from the symbol name by a colon, for example,
        \begin{equation}
                \label{eq:df-instance-010}
                \V{A:f,0}.
        \end{equation}
        The instance tag consists of a major and minor identifier,
        separated by a comma.
        For example in \eqref{eq:df-instance-010},
        ``\texttt{A}'' is the symbol name,
        ``\texttt{f,0}'' is the instance tag,
        ``\texttt{f}'' is the major identifier, and
        ``\texttt{0}'' is the minor identifier.

        The major identifier of the tag is inherited by its trivial productions.
        The minor identifier of the tag is used to disinguish symbol instances
        with the same major identifier.

        The minor identifier is rarely necessary and is almost always omitted.
        For example, \eqref{eq:df-instance-010}
        would almost always be written \V{A:f}.

        Instance tags are also used after strings,
        to indicate that every symbol instance in the string instance has that
        instance tag.
        For example, if
        \[
        \V{predot} = \V{A}\cat\V{B}\cat\V{C},
        \]
        then
        \[
        \V{predot:f} = \V{A:f}\cat\V{B:f}\cat\V{C:f}.
        \]
        \dfEnd
\end{definition}

\begin{definition}[Sentences and Sentential forms]
        If the first step of a derivation is $\V{S}$,
        the string consisting only of the start symbol,
every step in the derivation is a \textbf{sentential form}.
If a sentential form consists entirely of terminals,
it is a \textbf{sentence}.
\dfEnd
\end{definition}

\begin{definition}[Focus]
\label{df:focus}
\begin{MYsloppy}
A focus is a 5-tuple
\[
        (\V{predot:f},\V{postdot:f},\V{A:f},\V{origin},\V{current}).
\]
where \V{predot:f} and \V{postdot:f} are string instances, \V{origin} and \V{current} are positions
in the input, and \V{A:f} (sometimes written just \V{A})
is a non-terminal symbol instance.
\[ \V{A} \de \V{predot} \cat \V{postdot} \]
must be a rule in \V{P} and is called the \text{focus rule}.
\end{MYsloppy}

The focus represents a transition in a derivation,
which is called the \textbf{transition} of the focus.
        Without loss of generality, we can let our derivation be \V{drv}
        and write the focus transition as the following pair of steps
        in \V{drv}:
\begin{equation}
        \left( \; \begin{gathered}
           \V{before:f} \wcat \V{A:f} \wcat \V{after:f}, \\
                \V{before:f} \wcat \V{predot:f} \wcat \V{postdot:f} \wcat \V{after:f}
        \end{gathered} \; \right).
\end{equation}

Further overloading the term LHS,
\V{A:f} is the \textbf{LHS symbol instance}, or simply \textbf{LHS} of the focus.
The LHS symbol instance is also called the \textbf{focus symbol instance}
or \textbf{focus instance}.
The LHS symbol of the focus is tracked as an instance
in order to place the transition at a specific pairs of steps
in a derivation
-- an expansion of the focus rule
can appear at many points in a derivation.

$\V{predot:f}\cat\V{postdot:f}$ is the \textbf{RHS string instance}, or simply \textbf{RHS}.
The \textbf{dot position} of a focus is the position in the RHS string instance
between \V{predot} and \V{postdot}.
The last symbol of \V{predot} is the \textbf{predot symbol instance}
of the focus.
We note that it may happen that $\V{predot:f} = \epsilon$,
in which case there is no predot symbol instance.
If $\V{predot:f}\cat\V{postdot:f} = \epsilon$, there is only one position
in the RHS string instance, and that position is the dot position.

\V{current} is the location in the input of the dot position,
        and \V{origin} is the location in the input where the
        RHS string instance starts,
        so that
        \begin{gather}
                \V{before:f} \cat \V{predot:f} \destarV{drv} \Velement{w}{0,\V{current}} \text{, and} \\
                \V{predot:f} \destarV{drv} \Velement{w}{\V{current},\V{origin}}.
        \end{gather}
\dfEnd

A derivation which obeys the requirements of a focus is
        said to \textbf{match} that focus.
More than one derivation may match a focus.
\end{definition}

\begin{definition}[Focused derivation]
\label{df:fd}
Intuitively, a \textbf{focused} derivation
is a tuple including the derivation
as well as additional information
sufficient is specify a focus.
More formally,
a focused derivation is a 6-tuple
\begin{equation}
        \label{eq:df-fd-010}
        \V{df} = (\V{drv}, \V{stepIX}, \V{focusPos}, \V{dotPos}, \V{current}, \V{origin})
\end{equation}
where the following are true:
\begin{MYsloppy}
\par
\noindent $\bullet$ \V{drv} is a derivation.
\par
\noindent $\bullet$ \V{stepIX} is the index of the first step of the
\textbf{focal transition}, or simply \textbf{transition},
of \V{fd}.
That is, the focal transition is
$\Velement{drv}{\V{stepIX},(\V{stepIX}+1)}$.
\par \noindent $\bullet$ The focal symbol instance is
the \V{focusPos}'th symbol of the first step
of the focal transition, that is,
        \[ \element{(\VVelement{drv}{\V{stepIX}})}{\V{focusPos}}. \]
The rule of the focal transition is the \textbf{focal rule}.

The focal transition may, more intuitively, be written,
without loss of generality, as
\begin{equation}
        \label{eq:df-fd-020}
        \alpha \cat \V{A:f} \cat \beta
                \derivesV{drv} \alpha \cat \V{rhs} \cat \beta,
\end{equation}
where \size{\alpha} = \V{focusPos},
and \V{A:f} is the focal symbol instance.
We typically indicate the focal symbol instance with the tag ``\texttt{f}''.
$\V{A} \de \V{rhs}$ is the focal rule.
\par
\noindent $\bullet$ The non-negative integer \V{dotPos} is the dot position
in the focal rule, so that the \textbf{focal dotted rule} may
be written $\V{A} \de \V{predot} \mydot \V{postdot}$.
Incorporating the dotted rule and the dot,
the focal transition can be written
\begin{equation}
        \label{eq:df-fd-030}
        \alpha \cat \V{A:f} \cat \beta
        \derivesV{drv} \alpha \wcat \V{predot:2} \wmydot \V{postdot:2} \wcat \beta.
\end{equation}
\par
\noindent $\bullet$
\begin{equation}
        \label{eq:df-fd-035}
        \text{The initial segment of the input, \Velement{w}{0,\V{current}}, is known.}
\end{equation}
\par
\noindent $\bullet$ The second step of the focal transition, up to the dot position,
        produces the input as far as the current location.
        That is,
\begin{equation}
        \label{eq:df-fd-040}
        \alpha \cat \V{predot:2} \destarV{drv} \Velement{w}{0,\V{current}} \\
\end{equation}
\par
\noindent $\bullet$ The second step of the focal transition, up to the start
        of the RHS string instance produces the input as far as \V{origin}:
\begin{equation}
        \label{eq:df-fd-050}
        \alpha \destarV{drv} \Velement{w}{0,\V{origin}}.
\end{equation}
\end{MYsloppy}

We call the form in \eqref{eq:df-fd-030}
(a transition with the derivation,
the focal symbol instance,
and the dot position indicated)
a \textbf{decorated transition}.
The 6-tuple form of an FD is usually not
convenient for working with it,
and we will prefer more convenient
formalisms.
To specify a focused derivation,
it suffices to specify a decorated transition;
an assertion like \eqref{eq:df-fd-035}
that the input is known up to
the current location;
an equation like \eqref{eq:df-fd-040}
to describe the current location; and
an equation like \eqref{eq:df-fd-050}
to describe the origin location.

The focus matching
the focused derivation described
in \eqref{eq:df-fd-030}, \eqref{eq:df-fd-040}, and \eqref{eq:df-fd-050} is
\begin{equation}
        \label{eq:df-fd-060}
        (\V{predot},\V{postdot},\V{A:f},\V{origin},\V{current}).
\end{equation}
A well-defined focused derivation has exactly one focus.
\dfEnd
\end{definition}

\begin{definition}[Earley item to focus correspondence]
        \label{df:earley-item-to-focus}
The Earley item
\[
        \tuple{\V{A} \de \V{predot} \mydot \V{postdot}, \V{origin}, \V{current}}
\]
\textbf{corresponds} to the focus
\[
        (\V{predot},\V{postdot},\V{A:f},\V{origin},\V{current})
\]
and vice versa.
We note that, while the focus specifies the focus symbol instance \V{A:f},
the Earley item only specifies the LHS symbol \V{A}.
Thus focus to Earley item correspondence is a many-to-one relationship.
\dfEnd
\end{definition}

\begin{definition}[Earley item concepts and focuses]
\label{df:ei-focus-concept}
        An Earley item concept applied to a focus
        applies to the Earley item of the focus.
        For example, a focused derivation
        is a reduction if its Earley item is a reduction.
        \qquad \dfEnd
\end{definition}

\begin{definition}[Soundness]
A set of Earley items is \textbf{sound} for an input \V{w} iff
the corresponding focus of every Earley item
matches a derivation with input \V{w}.
\qquad \dfEnd
\end{definition}

\begin{definition}[Completeness]
\label{df:completeness}
A set of Earley items is \textbf{complete} for an input \V{w} with
respect to a set of focuses iff
for every focus in that set,
either that focus is a nulling completion,
or its Earley item is in \V{Rows}.  \dfEnd
\end{definition}

We note carefully that \Dfref{completeness} differs from
the usual definition of completeness in Earley parsing,
in excepting nulling completions from the definition.

\begin{definition}[Fundamental invariant]
\label{df:invariant}
The \textbf{fundamental invariant}\footnote{
This fundamental invariant is similar to the traditional
one, as found in~\cite[Theorem 4.9, p. 323]{AH1972v1}
}
requires the set of Earley items in a Earley stack
to be both sound and complete.
\dfEnd
\end{definition}

\begin{definition}[Focus concepts and focused derivations]
        \label{df:focus-fd-concept}
        An focus concept applies to a focused derivation
        if it applies to the focus of the focused derivation.
        For example, the Earley item of a focused derivation
        is the Earley item of its focus.
        \qquad \dfEnd
\end{definition}

\begin{definition}[Tangible symbol]
        In the context of a derivation,
        a \textbf{tangible} symbol instance is one that produces
        at least one terminal,
        and an \textbf{intangible} symbol instance in one that is
        not tangible.
        \dfEnd
\end{definition}

\begin{definition}[Tangible reduction FD]
        \label{df:rt}
        A \textbf{tangible reduction}
        is a focused derivation,
        where the focus is a reduction,
        and the predot symbol instance in the derivation
        is tangible.
        A \textbf{intangible reduction}
        is a focused derivation,
        where the focus is a reduction,
        and the predot symbol instance in the derivation
        is intangible.
        \dfEnd
\end{definition}

\begin{definition}[Tangible reduction inflows]
\label{df:tangible-inflows}
\todo{Fix the inflow definitions}
\todo{Change this to a tributary definition?}
        Suppose, without loss of generality, that
\begin{equation}
        \V{down} = \FA{FOCUS}{\V{antepredotA}\cat\V{B},\V{postdotA},\V{A},\V{origin},\V{current}} \\
\end{equation}
is a tangible reduction FD
        where
\begin{gather*}
        \V{B} \de \V{rhs} \in \V{P}
        \land \; \V{B} \deplus \Velement{w}{\V{originB},\V{current}}.
\end{gather*}
Then we say that
a FD of the form
\[
        \V{tributary} = \FA{FOCUS}{\V{rhs},\epsilon,\V{B},\V{originB},\V{current}}
\]
is a \textbf{tributary} of \V{down}.
We also say that
\V{down} is the \textbf{downstream channel}
(or simply \textbf{downstream})
of \V{tributary}.
\end{definition}

\begin{definition}[Confirmation mainstem]
\label{df:confirmation-stem}
        Suppose, without loss of generality, that
\begin{equation}
        \V{down} = (\V{A} \de \V{antepredotA} \cat \V{B} \mydot \V{postdot}, \V{origin},\V{current})
\end{equation}
is an confirmed Earley item.
Then we say that
a Earley item of the form
\begin{equation*}
        \V{stem} = (\V{A} \de \V{antepredotA} \mydot \V{B} \cat \V{postdot}, \V{origin},\V{joint}).
\end{equation*}
is a \textbf{mainstem} of
\V{down} at input location \V{joint}.
We also say that \V{down} is the \textbf{downstream channel}
(or simply \textbf{downstream})
of \V{mainstem}.
\dfEnd
\end{definition}

\begin{definition}[Prediction inflows]
\label{df:prediction-inflows}
        Suppose, without loss of generality, that
\begin{equation}
        \V{down} = \FA{DI}{\epsilon,\V{rhsA},\V{A},\V{current},\V{current}} \\
\end{equation}
is an prediction DI.
Then we say that
any DI of the form
\begin{equation*}
        \V{mainstem} =
        \FA{DI}{
        \begin{gathered}
        \; \V{predotB}, \; \V{A} \cat\V{afterPostdotB}, \; \\
                \V{B},\; \V{originB},\; \V{current}
        \end{gathered}
}
\end{equation*}
        is a \textbf{mainstem} of
        \V{down}.
We also say that \V{down} is the \textbf{downstream channel}
(or simply \textbf{downstream})
of \V{mainstem}.
\dfEnd
\end{definition}

\begin{definition}[Tangible and intangible confirmations]
        \label{df:tangible}
        A confirmed FD is \textbf{tangible} if its predot symbol instance
        derives at least one terminal.
        A confirmed FD is \textbf{intangible} if its predot symbol instance
        derives the empty string.
\end{definition}

\begin{definition}[Generations]
        \label{df:generation}
        Scansions and start Earley items belong to generation 0.
        The generation of all other Earley items is that of their
        first generation candidate.

        If an Earley item \V{down} has a \textbf{generation inflow} whose generation is \V{i},
        $\V{i}+1$ is a \textbf{generation candidate} of \V{down}.
        The generation inflow of predictions is its mainstem.
        The generation inflow of an intangible reduction is its mainstem.
        The generation inflow of an tangible reduction is its tributary.
        \dfEnd
\end{definition}

Note that \Dfref{generation} implies that every generation inflow
has the same current location as its downstream.

\todo{Prove that every confirmed Earley item belongs to a generation
        within its row -- this will require soundness}

\needspace{3in}
\section{Algorithm}
\label{sec:algorithm}
\FloatBarrier

\begin{algorithm}[ht]
\caption{Do Earley Parse}
\label{alg:earley}
\begin{algorithmic}[1]
        \Procedure{DoEarleyParse}{}
        \State \Call {AddRow0}{}
        \For{$\V{i} \gets 1, \Vsize{\V{w}}$}
                \State \Call {AddRow}{\V{i}}
        \EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
\caption{Add Row 0}
\label{alg:add-row-0}
\begin{algorithmic}[1]
        \Procedure{AddRow0}{}
        \State \Call {AddStartStates}{}
        \State \Call {FinishRow}{0}
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Add Row \V{n}}
\label{alg:add-row-n}
\begin{algorithmic}[1]
        \Procedure{AddRow}{\V{n}}
        \State \Call {AddScansions}{\V{n}}
        \State \Call {FinishRow}{\V{n}}
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Finish Row \V{n}}
\label{alg:finish-row}
\begin{algorithmic}[1]
        \Procedure{FinishRow}{\V{n}}
        \State $\V{i} \gets 0$ \Comment {Initialize \V{i}}
        \While {$\V{i} < \Vsize{row}$} \Comment {This loop adds items at the end of \V{row},
            so that \Vsize{row} will increase in the course of running this loop}
        \State $\V{current} \gets \Velement{row}{\V{i}}$
                \Comment {\VVelement{row}{i} is \V{i}'th Earley item in row}
        \If {\V{current} is complete}
             \State $\V{origin} \gets$ origin of \V{current}
             \If {$\V{origin} < \V{n}$}
                  \State \Call{AddTangibleReductions}{\V{current}}
             \EndIf
        \Else \Comment {... else if \V{current} is an incompletion}
             \State $\V{postdot} \gets$ postdot symbol of \V{current}
             \If {\V{postdot} is nullable}
                  \State \Call{AddIntangibleReduction}{\V{current}}
             \EndIf
             \State \Call{AddPredictions}{\V{postdot},\V{n}}
        \EndIf
        \State $\V{i} \gets \V{i} + 1$
        \EndWhile
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Add Tangible Reductions}
\label{alg:tangible-reductions}
\begin{algorithmic}[1]
        \Procedure{AddTangibleReductions}{\V{tributary}}
        \State $\V{tribOrigin} \gets \text{origin of \V{tributary}}$
        \State $\V{tribCurrent} \gets \text{current location of \V{tributary}}$
        \State $\V{tribLHS} \gets \text{LHS of \V{tributary}`s rule}$
        \State $\V{originRow} \gets \VVelement{rows}{tribOrigin}$
        \Statex\Comment Find the row where \V{tributary} starts
        \State $\V{mainstems} \gets$
        \Statex $\qquad \qquad \lbrace \V{item} \in \V{originRow} \mid \VFA{Postdot}{item} =  \V{tribLHS} \rbrace$
        \Statex \Comment {Set \V{mainstems} to the set of Earley items in \V{originRow} whose postdot
                item is \V{tribLHS}.}
     \For {$\V{mainstem} \in \V{mainstems}$}
          \State $\V{dotted} \gets \text{dotted rule of \V{mainstem}}$
          \State $\V{newDotted} \gets \Call{AdvanceDot}{\V{dotted}}$
          \State $\V{newOrigin} \gets \text{origin of \V{mainstem}}$
          \State $\V{reduction} \gets ( \V{newDotted}, \V{newOrigin}, \V{tribCurrent} )$
          \Statex \Comment Create a new Earley item
          \State If \V{reduction} is new, add it to \V{rows}, at the end
     \EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Advance Dot}
\label{alg:advance-dot}
\begin{algorithmic}[1]
        \Function{AdvanceDot}{\V{dottedRule}}
        \State \textbf{let} \V{dottedRule} \text{be} $(\V{A} \de \alpha \mydot \V{B} \cat \beta)$
        \State $\qquad \qquad \textbf{where } \alpha, \beta \in (\V{N}\cup\V{T})^\ast \text{ and }  \V{B} \in (\V{N}\cup\V{T})$
        \State \textbf{return} $(\V{A} \de \alpha \cat \V{B} \mydot \beta)$
\EndFunction
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Add Intangible Reduction}
\label{alg:intangible-reductions}
\begin{algorithmic}[1]
        \Procedure{AddIntangibleReduction}{\V{mainstem}}
        \State $\V{currLoc} \gets \text{current location of \V{mainstem}}$
        \State $\V{dotted} \gets \text{dotted rule of \V{mainstem}}$
        \State $\V{newDotted} \gets \Call{AdvanceDot}{\V{dotted}}$
        \State $\V{newOrigin} \gets  \text{origin of \V{mainstem}}$
        \State $\V{reduction} \gets ( \V{newDotted}, \V{newOrigin}, \V{currLoc} )$
        \Statex \Comment Create a new Earley item
        \State If \V{reduction} is new, add it to \V{rows}, at the end
\EndProcedure
\end{algorithmic}
\end{algorithm}

\begin{algorithm}[ht]
        \caption{Add Predictions}
\label{alg:predictions}
\begin{algorithmic}[1]
        \Procedure{AddPredictions}{\V{sym},\V{currLoc}}
        \For {every \V{rule} such that $\V{sym} \de \alpha$ and $\alpha \in (\V{N}\cup\V{T})^\ast$}
        \Statex \Comment for every \V{rule} in grammar with LHS equal to \V{sym}
                \State $\V{prediction} \gets ( (\V{sym} \de \mydot \alpha), \V{currLoc}, \V{currLoc} )$
                \Statex \Comment Create a new Earley item
                \State If \V{prediction} is new, add it to \V{rows}, at the end
        \EndFor
\EndProcedure
\end{algorithmic}
\end{algorithm}

\FloatBarrier

\section{Inflow lemmas}

\begin{lemma}[Antecedent helper]
\label{lm:ante-help}
        \todo{Delete this?}
        Unless a DI is a nulling completion,
        either its origin is properly before the current location,
        or it is a completion.
        That is, let
        \begin{equation}
                \label{eq:ante-help-010}
                \V{di} = \FA{DI}{\V{predotA},\V{postdotA},\V{A},\V{origin},\V{current}}.
        \end{equation}
        If
        \begin{equation}
                \label{eq:ante-help-020}
                \neg ( \V{A} \destarW{\V{di}} \epsilon \land \V{postdotA} = \epsilon)
        \end{equation}
        then
        \begin{equation}
                \label{eq:ante-help-030}
                \V{origin} < \V{current} \lor \V{postdotA} \neq \epsilon.
        \end{equation}
\end{lemma}

\begin{proof}
        We are assuming \eqref{eq:ante-help-020} for the theorem.
        Let us assume for a deduction that \V{di} is a completion,
        \begin{equation}
                \label{eq:ante-help-050}
                \V{postdotA} = \epsilon
                \text{ \cuz assumed for a deduction.}
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-060}
                \neg ( \V{A} \destarW{\V{di}} \epsilon )
                \,\cuz\, \eqref{eq:ante-help-020}, \eqref{eq:ante-help-050}.
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-070}
                \begin{gathered}
                \neg
                \left( \begin{gathered}
                        \V{A} \destarW{\V{di}} \V{predotA} \cat \V{postdotA} \\
                        \destarW{\V{di}} \Velement{w}{\V{origin},\V{current}} \cat \V{postdotA} \\
                        \destarW{\V{di}} \epsilon. \\
                \end{gathered} \right) \\
                        \cuz \eqref{eq:ante-help-010}, \Dfref{fd}.
                \end{gathered}
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-080}
                \begin{gathered}
                \neg ( \Velement{w}{\V{origin},\V{current}} \destarW{\V{di}} \epsilon ) \\
                \cuz \eqref{eq:ante-help-050}, \eqref{eq:ante-help-070}.
                \end{gathered}
        \end{equation}
        We have been careful in our notation in this proof to include the
        context DS of our derivations because this proof uses negation
        of derivation sets, whose consequences can be non-obvious.
        \begin{equation}
                \label{eq:ante-help-090}
                \begin{gathered}
                        \exists \; \alpha, \beta \in (\V{N} \cup \V{T})^\ast, \V{term} \in \V{T} \mid \\
                        \Velement{w}{\V{origin},\V{current}} \destarW{\V{di}} \alpha \cat \V{t} \cat \beta \\
                \cuz \eqref{eq:ante-help-080}.
                \end{gathered}
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-100}
                \begin{gathered}
                        \V{origin} < \V{current} \,\cuz\, \eqref{eq:ante-help-090}.
                \end{gathered}
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-110}
                \begin{gathered}
                        \V{postdotA} = \epsilon \implies \V{origin} < \V{current} \\
                        \text{ \cuz deduction of \eqref{eq:ante-help-100} from \eqref{eq:ante-help-010}.}
                \end{gathered}
        \end{equation}
        \begin{equation}
                \label{eq:ante-help-120}
                \V{origin} < \V{current} \lor \V{postdotA} \neq \epsilon \,\cuz\, \eqref{eq:ante-help-110}.
        \end{equation}
        Equation \eqref{eq:ante-help-120} is equivalent to \Eqref{ante-help-030}, which
        is what we needed to show for the lemma.
        \myqed
\end{proof}

\begin{lemma}[Confirmation mainstem]
        \label{lm:conf-stem}
        Let \V{fdConf} be a confirmed FD.
        \V{fdConf} has a mainstem \V{fdM}
        at \V{joint}, where
        \V{fdM} is not a nulling completion, and
        \V{joint} is the current location of \V{fdConf}
        less the length of the terminal string produced by the predot symbol.
        \lmEnd
\end{lemma}

\begin{proof}
For the the focus dotted rule, we consider an arbitrary confirmed dotted rule,
\begin{equation}
        \begin{gathered}
        \label{eq:pr-conf-stem-005}
        \V{A} \de \V{antepredot} \cat \V{B} \mydot \V{postdot} \\
                \land \; \size{\V{antepredot} \cat \V{B}} = \V{dotPosConf}
        \text{\cuz AF theorem, WLOG.}
        \end{gathered}
\end{equation}
We assume for the theorem the FD \V{fdConf},
which is consistent with \eqref{eq:pr-conf-stem-005},
and otherwise arbitrary:
\begin{equation}
        \label{eq:pr-conf-stem-010}
        \begin{gathered}
        \V{fdConf} = (\V{drv}, \V{stepIX}, \V{focusPos}, \V{dotPosConf}, \V{currentConf}, \V{origin}) \\
                \text{\cuz AF theorem, \Dfref{fd}, \eqref{eq:pr-conf-stem-005}, WLOG.}
        \end{gathered}
\end{equation}
A focal transition consistent with the preceeding,
and otherwise arbitrary, is
\begin{equation}
        \label{eq:pr-conf-stem-030}
        \begin{gathered}
                \Velement{drv}{\V{stepIX},(\V{stepIX}+1)} = \\
        \V{anteFocus:L} \wcat \V{A:f} \wcat \V{postFocus:L} \\
        \derivesV{drv}
                \left( \begin{gathered} \;
                \V{anteFocus:L} \wcat \V{antepredot:R} \wcat \V{B:pd} \wmydot \\
                \qquad \qquad \V{postdot:R} \wcat \V{postFocus:R}
                \; \end{gathered} \right) \\
                \text{\cuz \Dfref{fd}, \eqref{eq:pr-conf-stem-005}, \eqref{eq:pr-conf-stem-010}.}
        \end{gathered}
\end{equation}
\todo{Define predot symbol instance}
In \eqref{eq:pr-conf-stem-030},
the focus symbol instance is \V{A:f}.
Other major instance tags will be
``\texttt{L}'' to indicate
an instance from the LHS step of the transition;
``\texttt{R}'' to indicate
an instance from the LHS step of the transition; and
``\texttt{pd}'' to indicate
the predot symbol instance.
\begin{equation}
        \label{eq:pr-conf-stem-035}
        \begin{gathered}
        \text{The initial segment of the input, \Velement{w}{0,\V{currentConf}}, is known} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-conf-stem-010}, \eqref{eq:pr-conf-stem-030}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-040}
        \begin{gathered}
        \V{anteFocus:L} \wcat \V{antepredot:R} \wcat \V{B:pd} \destarV{drv} \Velement{w}{0,\V{currentConf}} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-conf-stem-010}, \eqref{eq:pr-conf-stem-030}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-050}
        \begin{gathered}
        \V{anteFocus:R} \destarV{drv} \Velement{w}{0,\V{origin}} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-conf-stem-010}, \eqref{eq:pr-conf-stem-030}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-070}
        \V{B:pd} \destarV{drv} \Velement{w}{\V{currentM},\V{currentConf}}
                \cuz \eqref{eq:pr-conf-stem-040}.
\end{equation}
In \eqref{eq:pr-conf-stem-070} we label the origin location of \V{B},
\V{currentM}, for reasons that will become clear later in this proof.
\begin{equation}
        \label{eq:pr-conf-stem-080}
        \begin{gathered}
        \V{origin} \le \V{currentM} \le \V{currentConf} \\
        \text{\cuz \eqref{eq:pr-conf-stem-040}, \eqref{eq:pr-conf-stem-050}, \eqref{eq:pr-conf-stem-070}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-090}
        \begin{gathered}
        \text{The initial segment of the input, \Velement{w}{0,\V{currentM}}, is known} \\
        \text{\cuz \eqref{eq:pr-conf-stem-035}, \eqref{eq:pr-conf-stem-080}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-100}
        \begin{gathered}
        \V{anteFocus:L} \wcat \V{antepredot:R} \destarV{drv} \Velement{w}{0,\V{currentM}} \\
        \text{\cuz \eqref{eq:pr-conf-stem-040}, \eqref{eq:pr-conf-stem-070}.}
        \end{gathered}
\end{equation}
We know from \eqref{eq:pr-conf-stem-005} that
\begin{equation}
        \begin{gathered}
        \label{eq:pr-conf-stem-110}
        \V{A} \de \V{antepredot} \cat \V{B} \mydot \V{postdot} \\
                \land \; \size{\V{antepredot}} = (\V{dotPosConf} \subtract 1) \\
        \text{\cuz AF theorem, \eqref{eq:pr-conf-stem-005}, WLOG.}
        \end{gathered}
\end{equation}
will also be a dotted rule in our grammar \V{g}.
We get \eqref{eq:pr-conf-stem-120}
by changing the decoration of
\eqref{eq:pr-conf-stem-030} to align with \eqref{eq:pr-conf-stem-110}.
\begin{equation}
        \label{eq:pr-conf-stem-120}
        \begin{gathered}
                \Velement{drv}{\V{stepIX},(\V{stepIX}+1)} = \\
        \V{anteFocus:L} \wcat \V{A:f} \wcat \V{postFocus:L} \\
        \derivesV{drv}
                \left( \begin{gathered} \;
                \V{anteFocus:L} \wcat \V{antepredot:R} \wmydot \qquad \\
                        \qquad \V{B:pd} \wcat \V{postdot:R} \wcat \V{postFocus:R}
                \; \end{gathered} \right) \\
                \text{\cuz \eqref{eq:pr-conf-stem-030}, \eqref{eq:pr-conf-stem-110}.}
        \end{gathered}
\end{equation}
From the foregoing, we know we have the focused derivation,
\begin{equation}
        \label{eq:pr-conf-stem-200}
        \begin{gathered}
        \V{fdM} = \left( \; \begin{gathered}
                \V{drv}, \V{stepIX}, \V{focusPos}, (\V{dotPosConf} \subtract 1), \\
                        \V{currentM}, \V{origin}
        \end{gathered} \; \right) \\
                \cuz \Dfref{fd}, \eqref{eq:pr-conf-stem-090}, \eqref{eq:pr-conf-stem-100},
                        \eqref{eq:pr-conf-stem-110}, \eqref{eq:pr-conf-stem-120}.
        \end{gathered}
\end{equation}
The Earley item of \eqref{eq:pr-conf-stem-200} is
\begin{equation}
        \label{eq:pr-conf-stem-210}
        \begin{gathered}
        \tuple{\V{A} \de \V{antepredot} \mydot \V{B} \cat \V{postdot}, \V{origin}, \V{currentM}} \\
                \cuz \Dfref{fd}, \Dfref{earley-item-to-focus}, \eqref{eq:pr-conf-stem-200}.
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-220}
        \myparbox{\V{fdM} is a mainstem of \V{fdConf} at \V{currentM}
        \cuz
        \Dfref{fd}, \Dfref{ei-focus-concept}, \Dfref{focus-fd-concept},
        \Dfref{confirmation-stem}, \eqref{eq:pr-conf-stem-200} \eqref{eq:pr-conf-stem-210}.
        }
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-225}
        \myparbox{\V{fdM} is not a completion \cuz \eqref{eq:pr-conf-stem-210}.}
\end{equation}
\begin{equation}
        \label{eq:pr-conf-stem-230}
        \myparbox{
                \V{currentM}, the location of \V{fdM}, is the current location of \V{fdConf}
                less the length of the terminal string produced by the predot symbol
                \cuz \eqref{eq:pr-conf-stem-070}.
        }
\end{equation}
Equations \eqref{eq:pr-conf-stem-220}, \eqref{eq:pr-conf-stem-225},
and \eqref{eq:pr-conf-stem-230}
are what we needed to show for the theorem.
\myqed
\end{proof}

\todo{define tributary *at* joint}
\begin{lemma}[Reduction tributary]
        \label{lm:conf-trib}
        Let \V{fdConf} be a tangible reduction FD.
        \V{fdConf} has a tributary \V{fdT}
        at \V{joint}, where
        \V{fdT} is not a nulling completion, and
        \V{joint} is the current location of \V{fdConf}
        less the length of the terminal string produced by the predot symbol.
        \lmEnd
\end{lemma}

\begin{proof}
\todo{This is new.  Revise it.}
For the focus dotted rule, we consider an arbitrary reduction dotted rule,
\begin{equation}
        \begin{gathered}
        \label{eq:pr-red-tr-005}
        \V{A} \de \V{antepredot} \cat \V{B} \mydot \V{postdot} \\
                \land \; \size{\V{antepredot} \cat \V{B}} = \V{dotPosConf} \\
                \land \; \V{B} \in \V{N} \\
        \text{\cuz AF theorem, WLOG.}
        \end{gathered}
\end{equation}
We assume for the theorem the FD \V{fdConf},
which is consistent with \eqref{eq:pr-red-tr-005},
and otherwise arbitrary:
\begin{equation}
        \label{eq:pr-red-tr-010}
        \begin{gathered}
                \V{fdConf} = \left( \begin{gathered} \;
                        \V{drv}, \V{stepAix}, \V{focusApos}, \V{dotPosConf}, \\
                                 \V{current}, \V{originConf}
                         \; \end{gathered} \right) \\
                \text{\cuz AF theorem, \Dfref{fd}, \eqref{eq:pr-red-tr-005}, WLOG.}
        \end{gathered}
\end{equation}
A focal transition consistent with the preceeding is
\begin{equation}
        \label{eq:pr-red-tr-030}
        \begin{gathered}
                \Velement{drv}{\V{stepAix},(\V{stepAix}+1)} = \\
        \V{anteFocusA:La} \wcat \V{A:f} \wcat \V{postFocusA:La} \\
        \derivesV{drv}
                \left( \begin{gathered} \;
                \V{anteFocusA:La} \wcat \V{antepredotA:Ra} \wcat \V{B:pd} \wmydot \\
                \qquad \qquad \V{postdotA:Ra} \wcat \V{postFocusA:La}
                \; \end{gathered} \right) \\
                \text{\cuz \Dfref{fd}, \eqref{eq:pr-red-tr-005}, \eqref{eq:pr-red-tr-010}, WLOG.}
        \end{gathered}
\end{equation}
We will call the transition of \V{fdConf} and \eqref{eq:pr-red-tr-030},
``transition A''.
In \eqref{eq:pr-red-tr-030},
the focus symbol instance is \V{A:f}.
Other major instance tags will be
``\texttt{La}'' to indicate
an instance from the LHS step of transition A;
``\texttt{Ra}'' to indicate
an instance from the LHS step of transition A; and
``\texttt{pdA}'' to indicate
the predot symbol instance of transition A.
\begin{equation}
        \label{eq:pr-red-tr-035}
        \begin{gathered}
        \text{The initial segment of the input, \Velement{w}{0,\V{current}}, is known} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-red-tr-010}, \eqref{eq:pr-red-tr-030}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-red-tr-040}
        \begin{gathered}
        \V{anteFocus:La} \wcat \V{antepredot:Ra} \wcat \V{B:pd} \destarV{drv} \Velement{w}{0,\V{current}} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-red-tr-010}, \eqref{eq:pr-red-tr-030}.}
        \end{gathered}
\end{equation}
\begin{equation}
        \label{eq:pr-red-tr-050}
        \begin{gathered}
        \V{anteFocus:Ra} \destarV{drv} \Velement{w}{0,\V{originConf}} \\
        \text{\cuz \Dfref{fd}, \eqref{eq:pr-red-tr-010}, \eqref{eq:pr-red-tr-030}.}
        \end{gathered}
\end{equation}
We recall that we assumed for the theorem that \V{fdConf} is tangible,
\begin{gather}
        \label{eq:pr-red-tr-070}
        \V{B:pd} \destarV{drv} \Velement{w}{\V{joint},\V{current}} \\
        \label{eq:pr-red-tr-075}
        \land \; \V{joint} < \V{current} \\
                \nonumber \cuz \eqref{eq:pr-red-tr-040}.
\end{gather}
\begin{equation}
        \label{eq:pr-red-tr-080}
        \begin{gathered}
        \V{originConf} \le \V{joint} < \V{current} \\
        \text{\cuz \eqref{eq:pr-red-tr-040}, \eqref{eq:pr-red-tr-050},
                \eqref{eq:pr-red-tr-070}, \eqref{eq:pr-red-tr-075}.}
        \end{gathered}
\end{equation}
\todo{Revised to here}
\myqed
\end{proof}

\begin{lemma}[Prediction mainstem]
        \label{lm:prediction-stem}
        Every prediction DI \Dfref{rt}
        is either a nulling completion,
        or has a mainstem \Dfref{tangible-inflows}.
        \lmEnd
\end{lemma}

\begin{proof}
\todo{Write this proof}
\myqed
\end{proof}

\section{Completion lemmas}

\begin{lemma}[Row 0 completion]
        Row 0 is complete.
        \lmEnd
\end{lemma}

\begin{proof}
        Proof is omitted because it is straightforward,
        and essentially the same
        as others in the literature.
        \myqed
\end{proof}

\begin{lemma}[Scansion completion]
        Scansion is complete in row $\V{i}+1$ if
        row \V{i} is complete.
        \lmEnd
\end{lemma}

\begin{proof}
        Proof is omitted because it is straightforward,
        and essentially the same
        as others in the literature.
        \myqed
\end{proof}

\begin{lemma}[Row completion step]
        \label{lm:row-step}
        Reductions are complete in generation $\V{g}+1$
        of row $\V{i}+1$ if
        the rows as far as \V{i} are complete,
        and row $\V{i+1}$ is complete as far as generation \V{g}.
        \lmEnd
\end{lemma}

\begin{proof}
        We consider, without loss of generality, a generation
        DI \V{di}, focused in a derivation \V{drv}.
        We need to show for the lemma that, if
                \todo{Refer to definition of completeness?}
        \begin{gather}
                \label{eq:row-step-050}
                \text{\V{di} is not a nulling completion;} \\
                \label{eq:row-step-055}
                \text{\V{di} is in generation $\V{g}+1$ of row \V{i};} \\
                \label{eq:row-step-060}
                \text{rows 0 through \V{i} are complete; and} \\
                \label{eq:row-step-070}
                \text{generations 0 through \V{g} are complete in row $\V{i}+1$;}
        \end{gather}
        then the code in
        Section~\ref{sec:algorithm}
        on page~\ref{sec:algorithm}
        adds the Earley item
        \V{di} to \V{rows}.

        \begin{equation}
        \label{eq:row-step-080}
                \text{\V{di} is not in generation 0 \cuz \eqref{eq:row-step-055}.}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-090}
                \myparbox{\V{di} is a prediction; a reduction with a tangible predot symbol;
                or a a reduction with an intangible predot symbol
                \cuz \eqref{eq:row-step-080}.}
        \end{equation}
        We proceed by cases.
        \par
        \vspace{2ex}\noindent\textbf{Case 1: Prediction.}
        \begin{equation}
        \label{eq:row-step-100}
                \text{\V{di} is a prediction \cuz Assumption for the case.}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-105}
                \begin{gathered}
                        \text{\V{di} has a mainstem DI in \V{drv}, call it \V{stem}} \\
                        \text{\cuz \eqref{eq:row-step-050}, \eqref{eq:row-step-100}, \Lmref{prediction-stem}.}
                \end{gathered}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-110}
                \begin{gathered}
                \text{\V{stem} is in generation \V{g} or earlier} \\
                \text{\cuz \eqref{eq:row-step-055}, \eqref{eq:row-step-105}, \Dfref{generation}.}
                \end{gathered}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-120}
                \begin{gathered}
                        \text{The Earley item corresponding to \V{stem} exists in \V{rows}} \\
                        \text{\cuz \eqref{eq:row-step-070}, \eqref{eq:row-step-110}.}
                \end{gathered}
        \end{equation}
        Looking at the code, we see that
        \begin{equation}
        \label{eq:row-step-130}
                \begin{gathered}
                \text{the Earley item corresponding to \V{di} is created in \V{rows}} \\
                        \text{\cuz \eqref{eq:row-step-100}, \eqref{eq:row-step-120},
                                \Algref{finish-row}, \Algref{predictions}.}
                \end{gathered}
        \end{equation}
        Equation \eqref{eq:row-step-130} shows the case for predictions,
        which started at \eqref{eq:row-step-100}.
        \par
        \vspace{2ex}\noindent\textbf{Case 2: Reduction with intangible predot symbol.}
        \begin{equation}
        \label{eq:row-step-200}
                \myparbox{\V{di} is a reduction with an intangible predot symbol \cuz Assumption for the case.}
        \end{equation}
\todo{Fix this case}
\todo{Figure out what to do about the inflow lemma}
        \begin{equation}
        \label{eq:row-step-205}
                \begin{gathered}
                        \text{\V{di} has a mainstem DI in \V{drv}, call it \V{stem}} \\
                        \text{\cuz \eqref{eq:row-step-050}, \eqref{eq:row-step-200}, Inflow lemma (TODO!).}
                \end{gathered}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-210}
                \begin{gathered}
                \text{\V{stem} is in generation \V{g} or earlier} \\
                \text{\cuz \eqref{eq:row-step-055}, \eqref{eq:row-step-205}, \Dfref{generation}.}
                \end{gathered}
        \end{equation}
        \begin{equation}
        \label{eq:row-step-220}
                \begin{gathered}
                        \text{The Earley item corresponding to \V{stem} exists in \V{rows}} \\
                        \text{\cuz \eqref{eq:row-step-070}, \eqref{eq:row-step-210}.}
                \end{gathered}
        \end{equation}
        Looking at the code, we see that
\todo{Look more carefully at algorithms}
        \begin{equation}
        \label{eq:row-step-230}
                \begin{gathered}
                \text{the Earley item corresponding to \V{di} is created in \V{rows}} \\
                        \text{\cuz \eqref{eq:row-step-200}, \eqref{eq:row-step-220},
                                \Algref{finish-row}, Look more carefully at algorithms (TODO!).}
                \end{gathered}
        \end{equation}
        Equation \eqref{eq:row-step-230} shows the case for reductions
with intangible predot symbols.
        which started at \eqref{eq:row-step-200}.
        \todo{Finish this case}
        \par
        \vspace{2ex}\noindent\textbf{Case 3: Reduction with tangible predot symbol.}
        \begin{equation}
        \label{eq:row-step-400}
                \myparbox{\V{di} is a reduction with a tangible predot symbol \cuz Assumption for the case.}
        \end{equation}
        \par
        \todo{Finish this case}
        \todo{Finish this proof}
        \myqed
\end{proof}

\begin{lemma}[Row completion]
        Row $\V{i}+1$ is complete
        if the rows as far as row \V{i} are complete.
        \lmEnd
\end{lemma}

\begin{proof}
        We use induction on the generations of row \V{i}.
        \todo{Finish this proof}
        \myqed
\end{proof}

\begin{theorem}[The llguidance Earley algorithm is complete]
        Row $\V{i}+1$ is complete
        if the rows as far as row \V{i} are complete.
        \lmEnd
\end{theorem}

\begin{proof}
        We use induction on the rows.
        \todo{Finish this proof}
        \myqed
\end{proof}

\FloatBarrier

{
\clearpage

% Ragged right, do not hyphenate.
\RaggedRight
\hyphenpenalty=10000
\exhyphenpenalty=10000

% Silence current hbox warnings, but allow them if
% badness increases further
\hbadness=2000

\begin{thebibliography}{10}

\bibitem{AH1972v1}
\newblock{Aho, Alfred V., and Jeffrey D. Ullman.}
\newblock{\em The theory of parsing, translation, and compiling. Vol. 1.}
\newblock{Prentice-Hall, 1972.}

\bibitem{Kegler2023}
\newblock{Jeffrey Kegler.}
\newblock{``Marpa, A practical general parser: the recognizer''.}
\newblock{\url{https://arxiv.org/abs/1910.08129}.
   Retrieved 2 December, 2024.}

\bibitem{llguidance}
\newblock{llguidance team.}
\newblock{"Low-level guidance parser".}
\newblock{
  \url{https://github.com/microsoft/llguidance}.
  Retrieved 2 December, 2024.}

\end{thebibliography}

} % RaggedRight

% \clearpage
% \phantomsection
% \listofalgorithms

\clearpage
\phantomsection
\renewcommand{\listtheoremname}{Formal apparatus}

\clearpage
\phantomsection
\pdfbookmark[0]{\listtheoremname}{listoflemmas}
% swapnumber would be cool, but is not in the thmtools in
% the latest Raspbian
\listoftheorems[ignoreall,onlynamed=observation,
    show={lemma,ldef,theorem,example,remark,definition}]

\ifdraft{
    \clearpage
    \phantomsection
    \listoftodos
}{}

\end{document}
